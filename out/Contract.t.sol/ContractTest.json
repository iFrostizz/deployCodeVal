{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b506107e4806100316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100695780633f5a4a2a146100a1578063ba414fa6146100a9578063f8ccbf47146100c1578063fa7626d4146100d4575b600080fd5b005b610084737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100676100e1565b6100b16101ac565b6040519015158152602001610098565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b60405163c88a5e6d60e01b8152306004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561013b57600080fd5b505af115801561014f573d6000803e3d6000fd5b50505050600061018b6040518060400160405280600c81526020016b10dbdb9d1c9858dd0b9cdbdb60a21b815250670de0b6b3a76400006102d7565b90506101a9816001600160a01b031631670de0b6b3a76400006103db565b50565b60008054610100900460ff16156101cc5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102d25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161025a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610642565b60408051601f198184030181529082905261027491610673565b6000604051808303816000865af19150503d80600081146102b1576040519150601f19603f3d011682016040523d82523d6000602084013e6102b6565b606091505b50915050808060200190518101906102ce919061068f565b9150505b919050565b604051638d1cc92560e01b81526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d90638d1cc925906103139087906004016106b8565b6000604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035a9190810190610701565b905080516020820184f091506001600160a01b0382166103d45760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840160405180910390fd5b5092915050565b808214610502577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161044c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610502610506565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106015760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526105a09291602001610642565b60408051601f19818403018152908290526105ba91610673565b6000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b505050505b6000805461ff001916610100179055565b60005b8381101561062d578181015183820152602001610615565b8381111561063c576000848401525b50505050565b6001600160e01b0319831681528151600090610665816004850160208701610612565b919091016004019392505050565b60008251610685818460208701610612565b9190910192915050565b6000602082840312156106a157600080fd5b815180151581146106b157600080fd5b9392505050565b60208152600082518060208401526106d7816040850160208701610612565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071357600080fd5b815167ffffffffffffffff8082111561072b57600080fd5b818401915084601f83011261073f57600080fd5b815181811115610751576107516106eb565b604051601f8201601f19908116603f01168101908382118183101715610779576107796106eb565b8160405282815287602084870101111561079257600080fd5b6107a3836020830160208801610612565b97965050505050505056fea26469706673582212209cd9027508637a6d2a2b452b0d4a0623a7e01a48476809d1e42ac9dc53b8899464736f6c634300080f0033",
    "sourceMap": "95:228:7:-:0;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;95:228:7;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a768463146100695780633f5a4a2a146100a1578063ba414fa6146100a9578063f8ccbf47146100c1578063fa7626d4146100d4575b600080fd5b005b610084737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100676100e1565b6100b16101ac565b6040519015158152602001610098565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b60405163c88a5e6d60e01b8152306004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561013b57600080fd5b505af115801561014f573d6000803e3d6000fd5b50505050600061018b6040518060400160405280600c81526020016b10dbdb9d1c9858dd0b9cdbdb60a21b815250670de0b6b3a76400006102d7565b90506101a9816001600160a01b031631670de0b6b3a76400006103db565b50565b60008054610100900460ff16156101cc5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102d25760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161025a917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610642565b60408051601f198184030181529082905261027491610673565b6000604051808303816000865af19150503d80600081146102b1576040519150601f19603f3d011682016040523d82523d6000602084013e6102b6565b606091505b50915050808060200190518101906102ce919061068f565b9150505b919050565b604051638d1cc92560e01b81526000908190737109709ecfa91a80626ff3989d68f67f5b1dd12d90638d1cc925906103139087906004016106b8565b6000604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261035a9190810190610701565b905080516020820184f091506001600160a01b0382166103d45760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840160405180910390fd5b5092915050565b808214610502577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161044c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610502610506565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106015760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526105a09291602001610642565b60408051601f19818403018152908290526105ba91610673565b6000604051808303816000865af19150503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b505050505b6000805461ff001916610100179055565b60005b8381101561062d578181015183820152602001610615565b8381111561063c576000848401525b50505050565b6001600160e01b0319831681528151600090610665816004850160208701610612565b919091016004019392505050565b60008251610685818460208701610612565b9190910192915050565b6000602082840312156106a157600080fd5b815180151581146106b157600080fd5b9392505050565b60208152600082518060208401526106d7816040850160208701610612565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071357600080fd5b815167ffffffffffffffff8082111561072b57600080fd5b818401915084601f83011261073f57600080fd5b815181811115610751576107516106eb565b604051601f8201601f19908116603f01168101908382118183101715610779576107796106eb565b8160405282815287602084870101111561079257600080fd5b6107a3836020830160208801610612565b97965050505050505056fea26469706673582212209cd9027508637a6d2a2b452b0d4a0623a7e01a48476809d1e42ac9dc53b8899464736f6c634300080f0033",
    "sourceMap": "95:228:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:26;;316:38:1;;245:64;316:38;;;;;-1:-1:-1;;;;;189:32:8;;;171:51;;159:2;144:18;316:38:1;;;;;;;;163:158:7;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:8;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:8;165:28:1;;;;;;;;;;;;1572:26:0;;;;;;;;;163:158:7;196:31;;-1:-1:-1;;;196:31:7;;212:4;196:31;;;625:51:8;219:7:7;692:18:8;;;685:34;245:64:1;;196:7:7;;598:18:8;;196:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:12;245:35;;;;;;;;;;;;;;-1:-1:-1;;;245:35:7;;;272:7;245:10;:35::i;:::-;230:50;;283:31;292:4;-1:-1:-1;;;;;292:12:7;;306:7;283:8;:31::i;:::-;193:128;163:158::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;625:51:8;;;-1:-1:-1;;;692:18:8;;;685:34;2196:43:0;;;;;;;;;598:18:8;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;6041:424:2:-;6180:16;;-1:-1:-1;;;6180:16:2;;6128:12;;;;245:64:1;;6180:10:2;;:16;;6191:4;;6180:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6180:16:2;;;;;;;;;;;;:::i;:::-;6156:40;;6320:8;6314:15;6307:4;6297:8;6293:19;6288:3;6281:49;6273:57;-1:-1:-1;;;;;;6371:18:2;;6350:108;;;;-1:-1:-1;;;6350:108:2;;3819:2:8;6350:108:2;;;3801:21:8;3858:2;3838:18;;;3831:30;3897:34;3877:18;;;3870:62;-1:-1:-1;;;3948:18:8;;;3941:41;3999:19;;6350:108:2;;;;;;;;6146:319;6041:424;;;;:::o;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;4231:2:8;4213:21;;;4270:2;4250:18;;;4243:30;4309:34;4304:2;4289:18;;4282:62;-1:-1:-1;;;4375:2:8;4360:18;;4353:32;4417:3;4402:19;;4029:398;5286:41:0;;;;;;;;5346:31;;;4644:21:8;;;4701:2;4681:18;;;4674:30;-1:-1:-1;;;4735:2:8;4720:18;;4713:40;4820:4;4805:20;;4798:36;;;5346:31:0;;;;;;;4785:3:8;5346:31:0;;;5396;;;5057:21:8;;;5114:2;5094:18;;;5087:30;-1:-1:-1;;;5148:2:8;5133:18;;5126:40;5233:4;5218:20;;5211:36;;;5396:31:0;;;;;;;5198:3:8;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;5460:51:8;;;-1:-1:-1;;;5527:18:8;;;5520:34;;;;2705:4:0;5570:18:8;;;5563:34;2482:11:0;;1671:64;2579:43;;5433:18:8;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;1009:258:8:-;1081:1;1091:113;1105:6;1102:1;1099:13;1091:113;;;1181:11;;;1175:18;1162:11;;;1155:39;1127:2;1120:10;1091:113;;;1222:6;1219:1;1216:13;1213:48;;;1257:1;1248:6;1243:3;1239:16;1232:27;1213:48;;1009:258;;;:::o;1272:371::-;-1:-1:-1;;;;;;1457:33:8;;1445:46;;1514:13;;1427:3;;1536:61;1514:13;1586:1;1577:11;;1570:4;1558:17;;1536:61;:::i;:::-;1617:16;;;;1635:1;1613:24;;1272:371;-1:-1:-1;;;1272:371:8:o;1648:274::-;1777:3;1815:6;1809:13;1831:53;1877:6;1872:3;1865:4;1857:6;1853:17;1831:53;:::i;:::-;1900:16;;;;;1648:274;-1:-1:-1;;1648:274:8:o;1927:277::-;1994:6;2047:2;2035:9;2026:7;2022:23;2018:32;2015:52;;;2063:1;2060;2053:12;2015:52;2095:9;2089:16;2148:5;2141:13;2134:21;2127:5;2124:32;2114:60;;2170:1;2167;2160:12;2114:60;2193:5;1927:277;-1:-1:-1;;;1927:277:8:o;2209:383::-;2358:2;2347:9;2340:21;2321:4;2390:6;2384:13;2433:6;2428:2;2417:9;2413:18;2406:34;2449:66;2508:6;2503:2;2492:9;2488:18;2483:2;2475:6;2471:15;2449:66;:::i;:::-;2576:2;2555:15;-1:-1:-1;;2551:29:8;2536:45;;;;2583:2;2532:54;;2209:383;-1:-1:-1;;2209:383:8:o;2597:127::-;2658:10;2653:3;2649:20;2646:1;2639:31;2689:4;2686:1;2679:15;2713:4;2710:1;2703:15;2729:883;2808:6;2861:2;2849:9;2840:7;2836:23;2832:32;2829:52;;;2877:1;2874;2867:12;2829:52;2910:9;2904:16;2939:18;2980:2;2972:6;2969:14;2966:34;;;2996:1;2993;2986:12;2966:34;3034:6;3023:9;3019:22;3009:32;;3079:7;3072:4;3068:2;3064:13;3060:27;3050:55;;3101:1;3098;3091:12;3050:55;3130:2;3124:9;3152:2;3148;3145:10;3142:36;;;3158:18;;:::i;:::-;3233:2;3227:9;3201:2;3287:13;;-1:-1:-1;;3283:22:8;;;3307:2;3279:31;3275:40;3263:53;;;3331:18;;;3351:22;;;3328:46;3325:72;;;3377:18;;:::i;:::-;3417:10;3413:2;3406:22;3452:2;3444:6;3437:18;3492:7;3487:2;3482;3478;3474:11;3470:20;3467:33;3464:53;;;3513:1;3510;3503:12;3464:53;3526:55;3578:2;3573;3565:6;3561:15;3556:2;3552;3548:11;3526:55;:::i;:::-;3600:6;2729:883;-1:-1:-1;;;;;;;2729:883:8:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExample()": "3f5a4a2a",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 21491,
    "exportedSymbols": {
      "ContractTest": [
        21490
      ],
      "DSTest": [
        1786
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3467
      ],
      "Test": [
        3369
      ],
      "Vm": [
        5292
      ],
      "console": [
        13356
      ],
      "console2": [
        21420
      ],
      "stdError": [
        3439
      ],
      "stdMath": [
        4708
      ],
      "stdStorage": [
        4569
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:285:7",
    "nodes": [
      {
        "id": 21455,
        "nodeType": "PragmaDirective",
        "src": "39:24:7",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21456,
        "nodeType": "ImportDirective",
        "src": "65:28:7",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21491,
        "sourceUnit": 4709,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21490,
        "nodeType": "ContractDefinition",
        "src": "95:228:7",
        "nodes": [
          {
            "id": 21462,
            "nodeType": "FunctionDefinition",
            "src": "131:26:7",
            "body": {
              "id": 21461,
              "nodeType": "Block",
              "src": "155:2:7",
              "statements": []
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "140:5:7",
            "parameters": {
              "id": 21459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "145:2:7"
            },
            "returnParameters": {
              "id": 21460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:7"
            },
            "scope": 21490,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21489,
            "nodeType": "FunctionDefinition",
            "src": "163:158:7",
            "body": {
              "id": 21488,
              "nodeType": "Block",
              "src": "193:128:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21470,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "212:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ContractTest_$21490",
                              "typeString": "contract ContractTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ContractTest_$21490",
                              "typeString": "contract ContractTest"
                            }
                          ],
                          "id": 21469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "204:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "204:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "204:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "219:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21465,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "196:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5292",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4957,
                      "src": "196:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "196:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21474,
                  "nodeType": "ExpressionStatement",
                  "src": "196:31:7"
                },
                {
                  "assignments": [
                    21476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21476,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "238:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 21488,
                      "src": "230:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21475,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "230:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21481,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "436f6e74726163742e736f6c",
                        "id": 21478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "256:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccd4ccee4bf7ce19942d4c741cb759c3d4a47b63cdd7d4f4471298a88a4c28d4",
                          "typeString": "literal_string \"Contract.sol\""
                        },
                        "value": "Contract.sol"
                      },
                      {
                        "hexValue": "31",
                        "id": 21479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "272:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ccd4ccee4bf7ce19942d4c741cb759c3d4a47b63cdd7d4f4471298a88a4c28d4",
                          "typeString": "literal_string \"Contract.sol\""
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21477,
                      "name": "deployCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2564,
                        2590,
                        2618
                      ],
                      "referencedDeclaration": 2618,
                      "src": "245:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (string memory,uint256) returns (address)"
                      }
                    },
                    "id": 21480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "245:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "230:50:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 21483,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21476,
                          "src": "292:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 21484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "292:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "306:7:7",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21482,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2693,
                        2718,
                        2731,
                        2747,
                        2789,
                        2831,
                        2873,
                        2910,
                        2947,
                        2984,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "283:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "283:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21487,
                  "nodeType": "ExpressionStatement",
                  "src": "283:31:7"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "172:11:7",
            "parameters": {
              "id": 21463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:7"
            },
            "returnParameters": {
              "id": 21464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:7"
            },
            "scope": 21490,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21457,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3369,
              "src": "120:4:7"
            },
            "id": 21458,
            "nodeType": "InheritanceSpecifier",
            "src": "120:4:7"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21490,
          3369,
          2022,
          1786
        ],
        "name": "ContractTest",
        "nameLocation": "104:12:7",
        "scope": 21491,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 7
}