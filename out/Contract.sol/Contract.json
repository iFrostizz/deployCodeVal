{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805462ff00ff19166201000117905560208152600660a052656265666f726560d01b60c05260008051602061038483398151915290606090a1670de0b6b3a764000034101561005657600080fd5b60008051602061038483398151915260405161008b9060208082526005908201526430b33a32b960d91b604082015260600190565b60405180910390a16102e2806100a26000396000f3fe6080604052600436106100405760003560e01c80633a76846314610049578063ba414fa61461008e578063f8ccbf47146100b3578063fa7626d4146100d357005b3661004757005b005b34801561005557600080fd5b50610071737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009a57600080fd5b506100a36100ed565b6040519015158152602001610085565b3480156100bf57600080fd5b506000546100a39062010000900460ff1681565b3480156100df57600080fd5b506000546100a39060ff1681565b60008054610100900460ff161561010d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102135760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161019b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610253565b60408051601f19818403018152908290526101b591610277565b6000604051808303816000865af19150503d80600081146101f2576040519150601f19603f3d011682016040523d82523d6000602084013e6101f7565b606091505b509150508080602001905181019061020f919061028a565b9150505b919050565b6000815160005b81811015610239576020818501810151868301520161021f565b81811115610248576000828601525b509290920192915050565b6001600160e01b031983168152600061026f6004830184610218565b949350505050565b60006102838284610218565b9392505050565b60006020828403121561029c57600080fd5b8151801515811461028357600080fdfea26469706673582212204eb61ef88ddf5504a8c16e1fdc843dcd1bb72918120b6c5dd257d6184902225f64736f6c634300080f003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50",
    "sourceMap": "95:207:6:-:0;;;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;216:2:7;198:21;;255:1;235:18;228:29;-1:-1:-1;;;273:18:7;266:36;-1:-1:-1;;;;;;;;;;;157:13:6;;;;194:7;181:9;:20;;173:29;;;;;;-1:-1:-1;;;;;;;;;;;210:12:6;;;;550:2:7;532:21;;;589:1;569:18;;;562:29;-1:-1:-1;;;622:2:7;607:18;;600:35;667:2;652:18;;348:328;210:12:6;;;;;;;;95:207;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100405760003560e01c80633a76846314610049578063ba414fa61461008e578063f8ccbf47146100b3578063fa7626d4146100d357005b3661004757005b005b34801561005557600080fd5b50610071737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009a57600080fd5b506100a36100ed565b6040519015158152602001610085565b3480156100bf57600080fd5b506000546100a39062010000900460ff1681565b3480156100df57600080fd5b506000546100a39060ff1681565b60008054610100900460ff161561010d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102135760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161019b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610253565b60408051601f19818403018152908290526101b591610277565b6000604051808303816000865af19150503d80600081146101f2576040519150601f19603f3d011682016040523d82523d6000602084013e6101f7565b606091505b509150508080602001905181019061020f919061028a565b9150505b919050565b6000815160005b81811015610239576020818501810151868301520161021f565b81811115610248576000828601525b509290920192915050565b6001600160e01b031983168152600061026f6004830184610218565b949350505050565b60006102838284610218565b9392505050565b60006020828403121561029c57600080fd5b8151801515811461028357600080fdfea26469706673582212204eb61ef88ddf5504a8c16e1fdc843dcd1bb72918120b6c5dd257d6184902225f64736f6c634300080f0033",
    "sourceMap": "95:207:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;316:38:1;;;;;;;;;;-1:-1:-1;316:38:1;245:64;316:38;;;;;-1:-1:-1;;;;;189:32:7;;;171:51;;159:2;144:18;316:38:1;;;;;;;;1819:584:0;;;;;;;;;;;;;:::i;:::-;;;398:14:7;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:7;165:28:1;;;;;;;;;;-1:-1:-1;165:28:1;;;;;;;;;;;1572:26:0;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;1819:584;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;599:51:7;;;-1:-1:-1;;;666:18:7;;;659:34;2196:43:0;;;;;;;;;572:18:7;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;704:336:7:-;745:3;783:5;777:12;807:1;817:128;831:6;828:1;825:13;817:128;;;928:4;913:13;;;909:24;;903:31;890:11;;;883:52;846:12;817:128;;;963:6;960:1;957:13;954:48;;;998:1;989:6;984:3;980:16;973:27;954:48;-1:-1:-1;1018:16:7;;;;;704:336;-1:-1:-1;;704:336:7:o;1045:278::-;-1:-1:-1;;;;;;1230:33:7;;1218:46;;1200:3;1280:37;1314:1;1305:11;;1297:6;1280:37;:::i;:::-;1273:44;1045:278;-1:-1:-1;;;;1045:278:7:o;1328:189::-;1457:3;1482:29;1507:3;1499:6;1482:29;:::i;:::-;1475:36;1328:189;-1:-1:-1;;;1328:189:7:o;1522:277::-;1589:6;1642:2;1630:9;1621:7;1617:23;1613:32;1610:52;;;1658:1;1655;1648:12;1610:52;1690:9;1684:16;1743:5;1736:13;1729:21;1722:5;1719:32;1709:60;;1765:1;1762;1755:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "src/Contract.sol",
    "id": 21454,
    "exportedSymbols": {
      "Contract": [
        21453
      ],
      "DSTest": [
        1786
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3467
      ],
      "Test": [
        3369
      ],
      "Vm": [
        5292
      ],
      "console": [
        13356
      ],
      "console2": [
        21420
      ],
      "stdError": [
        3439
      ],
      "stdMath": [
        4708
      ],
      "stdStorage": [
        4569
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:264:6",
    "nodes": [
      {
        "id": 21422,
        "nodeType": "PragmaDirective",
        "src": "39:24:6",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21423,
        "nodeType": "ImportDirective",
        "src": "65:28:6",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21454,
        "sourceUnit": 4709,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21453,
        "nodeType": "ContractDefinition",
        "src": "95:207:6",
        "nodes": [
          {
            "id": 21444,
            "nodeType": "FunctionDefinition",
            "src": "127:102:6",
            "body": {
              "id": 21443,
              "nodeType": "Block",
              "src": "149:80:6",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6265666f7265",
                        "id": 21429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "161:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20db4bb3b2034696124254dcded9e30e13e0e87193c8349a1ec155a5031d4465",
                          "typeString": "literal_string \"before\""
                        },
                        "value": "before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_20db4bb3b2034696124254dcded9e30e13e0e87193c8349a1ec155a5031d4465",
                          "typeString": "literal_string \"before\""
                        }
                      ],
                      "id": 21428,
                      "name": "log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "157:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 21430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "157:13:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21431,
                  "nodeType": "EmitStatement",
                  "src": "152:18:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "181:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "181:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 21435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "194:7:6",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "181:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "173:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "173:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21438,
                  "nodeType": "ExpressionStatement",
                  "src": "173:29:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6166746572",
                        "id": 21440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "214:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f13f8f48f784339836074bca589b438c6e583d5a28900901e1cb2141728a9248",
                          "typeString": "literal_string \"after\""
                        },
                        "value": "after"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f13f8f48f784339836074bca589b438c6e583d5a28900901e1cb2141728a9248",
                          "typeString": "literal_string \"after\""
                        }
                      ],
                      "id": 21439,
                      "name": "log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "210:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 21441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "210:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21442,
                  "nodeType": "EmitStatement",
                  "src": "205:17:6"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "138:2:6"
            },
            "returnParameters": {
              "id": 21427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:0:6"
            },
            "scope": 21453,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21448,
            "nodeType": "FunctionDefinition",
            "src": "235:29:6",
            "body": {
              "id": 21447,
              "nodeType": "Block",
              "src": "262:2:6",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:2:6"
            },
            "returnParameters": {
              "id": 21446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:6"
            },
            "scope": 21453,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 21452,
            "nodeType": "FunctionDefinition",
            "src": "270:30:6",
            "body": {
              "id": 21451,
              "nodeType": "Block",
              "src": "298:2:6",
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:2:6"
            },
            "returnParameters": {
              "id": 21450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:6"
            },
            "scope": 21453,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21424,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3369,
              "src": "116:4:6"
            },
            "id": 21425,
            "nodeType": "InheritanceSpecifier",
            "src": "116:4:6"
          }
        ],
        "canonicalName": "Contract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21453,
          3369,
          2022,
          1786
        ],
        "name": "Contract",
        "nameLocation": "104:8:6",
        "scope": 21454,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 6
}